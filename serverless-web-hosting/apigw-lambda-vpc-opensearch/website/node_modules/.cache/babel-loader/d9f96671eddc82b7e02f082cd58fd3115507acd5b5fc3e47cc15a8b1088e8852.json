{"ast":null,"code":"import React from'react';import'./SearchPage.css';import Search from'../components/Search';import{Link}from'react-router-dom';import useOpenSearch from'../useOpenSearch';import{useStateValue}from'../StateProvider';// import Response from \"../response\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SearchPage(){const[{term},dispatch]=useStateValue();// LIVE API CALL\nconst{data}=useOpenSearch(term);// MOCK API CALL\n//   const data = Response;\n//   console.log(data);\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"searchPage\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"searchPage__header\",children:[/*#__PURE__*/_jsxs(Link,{className:\"searchPage__logo\",to:\"/\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"aws\"}),/*#__PURE__*/_jsx(\"p\",{children:\"_opensearch\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"searchPage__headerBody\",children:/*#__PURE__*/_jsx(Search,{hideButtons:true})})]}),term&&/*#__PURE__*/_jsxs(\"div\",{className:\"searchPage__results\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"searchPage__resultCount\",children:[\"About \",data===null||data===void 0?void 0:data.total,\" results (\",data===null||data===void 0?void 0:data.time,\" seconds) for\",' ',term]}),data===null||data===void 0?void 0:data.documents.map(doc=>{var _doc$pagemap,_doc$pagemap$cse_thum,_doc$pagemap2,_doc$pagemap2$cse_thu,_doc$pagemap3,_doc$pagemap3$cse_thu;return/*#__PURE__*/_jsxs(\"div\",{className:\"searchPage__result\",children:[/*#__PURE__*/_jsx(\"a\",{className:\"searchPage__resultTitle\",href:doc.reddit.url,children:/*#__PURE__*/_jsx(\"h2\",{children:doc.reddit.title})}),/*#__PURE__*/_jsxs(\"a\",{className:\"searchPage__resultLink\",href:doc.reddit.url,children:[((_doc$pagemap=doc.pagemap)===null||_doc$pagemap===void 0?void 0:(_doc$pagemap$cse_thum=_doc$pagemap.cse_thumbnail)===null||_doc$pagemap$cse_thum===void 0?void 0:_doc$pagemap$cse_thum.length)>0&&((_doc$pagemap2=doc.pagemap)===null||_doc$pagemap2===void 0?void 0:(_doc$pagemap2$cse_thu=_doc$pagemap2.cse_thumbnail[0])===null||_doc$pagemap2$cse_thu===void 0?void 0:_doc$pagemap2$cse_thu.src)&&/*#__PURE__*/_jsx(\"img\",{className:\"searchPage__resultImage\",src:(_doc$pagemap3=doc.pagemap)===null||_doc$pagemap3===void 0?void 0:(_doc$pagemap3$cse_thu=_doc$pagemap3.cse_thumbnail[0])===null||_doc$pagemap3$cse_thu===void 0?void 0:_doc$pagemap3$cse_thu.src,alt:\"\"}),doc.reddit.url]}),/*#__PURE__*/_jsxs(\"p\",{className:\"searchPage__resultSummary\",children:[\"index: \",doc.index,\", score: \",doc.score]}),/*#__PURE__*/_jsx(\"p\",{className:\"searchPage__resultSnippet\",children:doc.reddit.comment})]});})]})]});}export default SearchPage;","map":{"version":3,"names":["React","Search","Link","useOpenSearch","useStateValue","jsx","_jsx","jsxs","_jsxs","SearchPage","term","dispatch","data","className","children","to","hideButtons","total","time","documents","map","doc","_doc$pagemap","_doc$pagemap$cse_thum","_doc$pagemap2","_doc$pagemap2$cse_thu","_doc$pagemap3","_doc$pagemap3$cse_thu","href","reddit","url","title","pagemap","cse_thumbnail","length","src","alt","index","score","comment"],"sources":["/Users/junghwpark/Dev/Projects/AWS/aws-serverless-demos/serverless-web-hosting/apigw-lambda-vpc-opensearch/website/src/pages/SearchPage.js"],"sourcesContent":["import React from 'react';\nimport './SearchPage.css';\nimport Search from '../components/Search';\nimport { Link } from 'react-router-dom';\nimport useOpenSearch from '../useOpenSearch';\nimport { useStateValue } from '../StateProvider';\n// import Response from \"../response\";\n\nfunction SearchPage() {\n  const [{ term }, dispatch] = useStateValue();\n\n  // LIVE API CALL\n  const { data } = useOpenSearch(term);\n\n  // MOCK API CALL\n  //   const data = Response;\n  //   console.log(data);\n\n  return (\n    <div className=\"searchPage\">\n      <div className=\"searchPage__header\">\n        <Link className=\"searchPage__logo\" to=\"/\">\n          <p>aws</p>\n          <p>_opensearch</p>\n        </Link>\n        <div className=\"searchPage__headerBody\">\n          <Search hideButtons />\n        </div>\n      </div>\n      {/* {true && ( */}\n      {term && (\n        <div className=\"searchPage__results\">\n          <p className=\"searchPage__resultCount\">\n            About {data?.total} results ({data?.time} seconds) for{' '}\n            {term}\n          </p>\n\n          {data?.documents.map((doc) => (\n            <div className=\"searchPage__result\">\n              <a\n                className=\"searchPage__resultTitle\"\n                href={doc.reddit.url}\n              >\n                <h2>{doc.reddit.title}</h2>\n              </a>\n              <a\n                className=\"searchPage__resultLink\"\n                href={doc.reddit.url}\n              >\n                {doc.pagemap?.cse_thumbnail?.length > 0 &&\n                  doc.pagemap?.cse_thumbnail[0]?.src && (\n                    <img\n                      className=\"searchPage__resultImage\"\n                      src={doc.pagemap?.cse_thumbnail[0]?.src}\n                      alt=\"\"\n                    />\n                  )}\n                {doc.reddit.url}\n              </a>\n              <p className=\"searchPage__resultSummary\">\n                index: {doc.index}, score: {doc.score}\n              </p>\n              <p className=\"searchPage__resultSnippet\">\n                {doc.reddit.comment}\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}